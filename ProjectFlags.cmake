
# Visual Studio configuration.
###################################################################################################
if( WIN32 )

	if( ${CMAKE_SIZEOF_VOID_P} EQUAL 4 )
		# /Gr = fastCall
		# /Ob2 = inline functions expansion		
		set( CMAKE_CXX_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /Gr /Ob2" )		
		set( CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /Gr /Ob2" )	
	
		# VS 2013 Edit And Continue is not available for x64.
		set( CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /ZI" )
		set( CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /ZI" )
		
		# Linker
		set( CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /SAFESEH:NO")
		set( CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} /SAFESEH:NO")
		set( CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} /SAFESEH:NO")
						  
		set( CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /SAFESEH:NO")	
		set( CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /SAFESEH:NO")
		set( CMAKE_MODULE_LINKER_FLAGS_RELEASE "${CMAKE_MODULE_LINKER_FLAGS_RELEASE} /SAFESEH:NO")
	endif()

	# Multi Proc Build
	if(NOT OPTION_BUILD_TYPE_DEBUG)	
		option(OPTION_BUILD_USE_MP "Use /MP compiler flag." ON)
		if(OPTION_BUILD_USE_MP)
			set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
			set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /MP")
		endif()
	endif()	
	
	# Warning Level 3 for Debug builds
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W3")
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W3")
			
	set( CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd" )
	set( CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MTd" )
	set( CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT" )
	set( CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MT" )
	
	
	set( CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:MSVCRTD")
	set( CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:MSVCRTD")
	set( CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} /NODEFAULTLIB:MSVCRTD")
	
	set( CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /NODEFAULTLIB:MSVCRT")
	set( CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /NODEFAULTLIB:MSVCRT")
	set( CMAKE_MODULE_LINKER_FLAGS_RELEASE "${CMAKE_MODULE_LINKER_FLAGS_RELEASE} /NODEFAULTLIB:MSVCRT")
	
	
	# Clean-up and mark flags lists.
	list( REMOVE_DUPLICATES CMAKE_EXE_LINKER_FLAGS_DEBUG )	
	list( REMOVE_DUPLICATES CMAKE_SHARED_LINKER_FLAGS_DEBUG )	
	list( REMOVE_DUPLICATES CMAKE_MODULE_LINKER_FLAGS_DEBUG )
	mark_as_advanced( CMAKE_EXE_LINKER_FLAGS_DEBUG 
					  CMAKE_SHARED_LINKER_FLAGS_DEBUG 
					  CMAKE_MODULE_LINKER_FLAGS_DEBUG )
					  
	list( REMOVE_DUPLICATES CMAKE_EXE_LINKER_FLAGS_RELEASE )
	list( REMOVE_DUPLICATES CMAKE_SHARED_LINKER_FLAGS_RELEASE )	
	list( REMOVE_DUPLICATES CMAKE_MODULE_LINKER_FLAGS_RELEASE )
	mark_as_advanced( CMAKE_EXE_LINKER_FLAGS_RELEASE 
					  CMAKE_SHARED_LINKER_FLAGS_RELEASE 
					  CMAKE_MODULE_LINKER_FLAGS_RELEASE )
					  
	
	list( REMOVE_DUPLICATES CMAKE_CXX_FLAGS_DEBUG )
	list( REMOVE_DUPLICATES CMAKE_C_FLAGS_DEBUG )
	mark_as_advanced( CMAKE_CXX_FLAGS_DEBUG 
					  CMAKE_C_FLAGS_DEBUG )
	
	list( REMOVE_DUPLICATES CMAKE_CXX_FLAGS_RELEASE )
	list( REMOVE_DUPLICATES CMAKE_C_FLAGS_RELEASE )
	mark_as_advanced( CMAKE_CXX_FLAGS_RELEASE 
					  CMAKE_C_FLAGS_RELEASE )
	
	list( REMOVE_DUPLICATES CMAKE_CXX_FLAGS )
	list( REMOVE_DUPLICATES CMAKE_C_FLAGS )
	mark_as_advanced( CMAKE_CXX_FLAGS 
					  CMAKE_C_FLAGS )
	
#	if (MSVC11)
#		set(CMAKE_GENERATOR_TOOLSET "v110" CACHE STRING "Platform Toolset" FORCE) 
#	elseif (MSVC12)
#		set(CMAKE_GENERATOR_TOOLSET "v120" CACHE STRING "Platform Toolset" FORCE) 
#	endif ()
	
endif()
